{
	"host":"localhost",
	"port":"1235",
	"dbserver":"localhost",
	"dbport":"5984",
	"staticDirs":["."],
	"swaggerTemplate":{
		"swagger":"2.0",
		"info":{
			"title":"",
			"description":"",
			"termsOfService":"",
			"contact":{
				"email":"",
				"url":"",
				"name":""
			},
			"license":{
				"name":"",
				"url":""
			},
		"host":"",
		"basePath":"",
		"schemes":[""],
		"consumes":[""],
		"produces":[""],
		"paths":{},
		"definitions":{},
		"parameters":{
			"limitParam":{
				"name":"limit",
				"type":"integer",
				"in":"query",
				"minimum":"0",
				"maximum":"100",
				"defaultValue":"10"
			},
			"offsetParam":{
				"name":"offset",
				"type":"integer",
				"in":"query",
				"minimum":"0",
				"defaultValue":"0"
			}

		},
		"responses":{},
		"securityDefinitions":{},
		"security":{},
		"tags":[],
		"externalDocs":{}
	},
	"commonSingleResponses":{
			"404":{
				"description": "Item not found"
			},
			"500":{
				"description":"Internal server error"
			},
			"409":{
				"description":"Bad parameter or other argument."
			}
		},
	"commonCollectionResponses":{
			"404":{
				"description": "Item not found"	
			},
			"500":{
				"description":"Internal server error"
			},
			"409":{
				"description":"Bad parameter or other argument."
			}
		},
	"commonGetParams":[
		{
			"name":"limit",
			"type":"integer",
			"in":"query",
			"minimum":"0",
			"maximum":"100",
			"default":"10"
		},
		{
			"name":"offset",
			"type":"integer",
			"in":"query",
			"minimum":"0",
			"default":"0"
		}
	],
	"containerModels":[
		{
			"id": "Container",
			"description": "A generic container type.",
			"properties": {
				"meta": {
					"$ref": "metalist"
				},
				"containerType":{
					"type":"string"
				}
			},
			"subTypes": [],
			"discriminator":"containerType",
			"required":["containerType"]

		},
		{
			"id":"Metalist",
			"description":"A container for meta information about a call to a service.",
			"properties":{
				"responseCode":{
					"type":"number",
					"minimum":"100",
					"maximum":"999",
					"description":"The HTTP response code for a call."
				},
				"responseMessage":{
					"type":"string",
					"description":"A human readable description of the response to the call."
				},
			    "offset": {
			    	"type":"integer",
			    	"description":"The result offset requested during the call."
			    },
			    "limit": {
			    	"type":"integer",
			    	"description":"The maximum number of results requested during the call."
			    },
			    "total": {
			    	"type":"integer",
			    	"description":"The total number of results available."
			    },
			    "count": {
			    	"type":"integer",
			    	"description":"The number of results returned by the call."
			    }
			}
		}
	]

}